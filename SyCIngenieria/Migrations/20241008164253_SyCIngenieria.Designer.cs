// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SyCIngenieria.Models;

#nullable disable

namespace SyCIngenieria.Migrations
{
    [DbContext(typeof(SyCIngenieriaContext))]
    [Migration("20241008164253_SyCIngenieria")]
    partial class SyCIngenieria
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.Actas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DocumentoAdjunto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NombreActa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ODSId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ODSId");

                    b.ToTable("Actas");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.AmpliacionContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContratoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinAmpliacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicioAmpliacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroDiasAmpliacion")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorAmpliacion")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("AmpliacionContratos");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DuracionDiascontrato")
                        .HasColumnType("int");

                    b.Property<string>("EmailPersonaContrato")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmpresasId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_Fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombrePersonaContrato")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumeroContrato")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroDocumentoPersonaContrato")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TelefonoPersonaContrato")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ValorContrato")
                        .HasMaxLength(50)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresasId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.Empresas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NIT")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.ODS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConexoObra")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DiasEjecuCionODS")
                        .HasColumnType("int");

                    b.Property<int>("EmpesasId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoODS")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinODS")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicioODS")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrdenesCambioId")
                        .HasColumnType("int");

                    b.Property<string>("PlantaSistema")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProyectosId")
                        .HasColumnType("int");

                    b.Property<int>("RecursoODS")
                        .HasColumnType("int");

                    b.Property<int>("SolicitanteCliente")
                        .HasColumnType("int");

                    b.Property<int>("Supervisor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SuspensionFechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SuspensionFechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("TroncalesId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorActual")
                        .HasMaxLength(50)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ValorInicalODS")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpesasId");

                    b.HasIndex("OrdenesCambioId");

                    b.HasIndex("ProyectosId");

                    b.HasIndex("SolicitanteCliente");

                    b.HasIndex("Supervisor");

                    b.HasIndex("TroncalesId");

                    b.ToTable("oDs");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.OrdenCambio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AmpliacionContratoId")
                        .HasColumnType("int");

                    b.Property<int>("ContratoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmpliacionContratoId")
                        .IsUnique()
                        .HasFilter("[AmpliacionContratoId] IS NOT NULL");

                    b.HasIndex("ContratoId");

                    b.ToTable("ordenCambios");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.Proyectos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionProyecto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NombreProyecto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.Troncales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreTroncal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Troncales");
                });

            modelBuilder.Entity("SyCIngenieria.Models.Seguridad.Modulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NombreModulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("SyCIngenieria.Models.Seguridad.Permisos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actualizar")
                        .HasColumnType("bit");

                    b.Property<bool>("Editar")
                        .HasColumnType("bit");

                    b.Property<bool>("Eliminar")
                        .HasColumnType("bit");

                    b.Property<bool>("Exportar")
                        .HasColumnType("bit");

                    b.Property<int>("FkRelacionalModulosRoles")
                        .HasColumnType("int");

                    b.Property<bool>("Importar")
                        .HasColumnType("bit");

                    b.Property<bool>("Insertar")
                        .HasColumnType("bit");

                    b.Property<bool>("Lectura")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FkRelacionalModulosRoles");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("SyCIngenieria.Models.Seguridad.RelacionalModulosRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FkModulo")
                        .HasColumnType("int");

                    b.Property<int>("FkRol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FkModulo");

                    b.HasIndex("FkRol");

                    b.ToTable("RelacionalModulosRoles");
                });

            modelBuilder.Entity("SyCIngenieria.Models.Seguridad.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SyCIngenieria.Models.Seguridad.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaExpira")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FkRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.Actas", b =>
                {
                    b.HasOne("SyCIngenieria.Models.GestionContratos.ODS", "ODS")
                        .WithMany("Actas")
                        .HasForeignKey("ODSId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ODS");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.AmpliacionContrato", b =>
                {
                    b.HasOne("SyCIngenieria.Models.GestionContratos.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.Contrato", b =>
                {
                    b.HasOne("SyCIngenieria.Models.GestionContratos.Empresas", "Empresas")
                        .WithMany("Contratos")
                        .HasForeignKey("EmpresasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.ODS", b =>
                {
                    b.HasOne("SyCIngenieria.Models.GestionContratos.Empresas", "Empresas")
                        .WithMany("ODS")
                        .HasForeignKey("EmpesasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SyCIngenieria.Models.GestionContratos.OrdenCambio", "OrdenCambio")
                        .WithMany("ODS")
                        .HasForeignKey("OrdenesCambioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SyCIngenieria.Models.GestionContratos.Proyectos", "Proyectos")
                        .WithMany("ODS")
                        .HasForeignKey("ProyectosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SyCIngenieria.Models.Seguridad.Usuarios", "SolicitanteUsuarios")
                        .WithMany()
                        .HasForeignKey("SolicitanteCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SyCIngenieria.Models.Seguridad.Usuarios", "SupervisorUsuarios")
                        .WithMany()
                        .HasForeignKey("Supervisor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SyCIngenieria.Models.GestionContratos.Troncales", "Troncales")
                        .WithMany("ODS")
                        .HasForeignKey("TroncalesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresas");

                    b.Navigation("OrdenCambio");

                    b.Navigation("Proyectos");

                    b.Navigation("SolicitanteUsuarios");

                    b.Navigation("SupervisorUsuarios");

                    b.Navigation("Troncales");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.OrdenCambio", b =>
                {
                    b.HasOne("SyCIngenieria.Models.GestionContratos.AmpliacionContrato", "AmpliacionContrato")
                        .WithOne()
                        .HasForeignKey("SyCIngenieria.Models.GestionContratos.OrdenCambio", "AmpliacionContratoId");

                    b.HasOne("SyCIngenieria.Models.GestionContratos.Contrato", "Contrato")
                        .WithMany("OrdenesCambio")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AmpliacionContrato");

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("SyCIngenieria.Models.Seguridad.Permisos", b =>
                {
                    b.HasOne("SyCIngenieria.Models.Seguridad.RelacionalModulosRoles", "RelacionalModulosRoles")
                        .WithMany("Permisos")
                        .HasForeignKey("FkRelacionalModulosRoles")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RelacionalModulosRoles");
                });

            modelBuilder.Entity("SyCIngenieria.Models.Seguridad.RelacionalModulosRoles", b =>
                {
                    b.HasOne("SyCIngenieria.Models.Seguridad.Modulos", "Modulo")
                        .WithMany()
                        .HasForeignKey("FkModulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SyCIngenieria.Models.Seguridad.Roles", "Rol")
                        .WithMany()
                        .HasForeignKey("FkRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Modulo");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SyCIngenieria.Models.Seguridad.Usuarios", b =>
                {
                    b.HasOne("SyCIngenieria.Models.Seguridad.Roles", "Rol")
                        .WithMany()
                        .HasForeignKey("FkRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.Contrato", b =>
                {
                    b.Navigation("OrdenesCambio");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.Empresas", b =>
                {
                    b.Navigation("Contratos");

                    b.Navigation("ODS");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.ODS", b =>
                {
                    b.Navigation("Actas");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.OrdenCambio", b =>
                {
                    b.Navigation("ODS");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.Proyectos", b =>
                {
                    b.Navigation("ODS");
                });

            modelBuilder.Entity("SyCIngenieria.Models.GestionContratos.Troncales", b =>
                {
                    b.Navigation("ODS");
                });

            modelBuilder.Entity("SyCIngenieria.Models.Seguridad.RelacionalModulosRoles", b =>
                {
                    b.Navigation("Permisos");
                });
#pragma warning restore 612, 618
        }
    }
}
